{
  "name": "MediaSource",
  "defined": {
    "spec": {
      "title": "Media Source Extensionsâ„¢",
      "url": "https://www.w3.org/TR/media-source/"
    },
    "fragment": "[Exposed=Window]\ninterface MediaSource : EventTarget {\n    constructor();\n    readonly        attribute SourceBufferList    sourceBuffers;\n    readonly        attribute SourceBufferList    activeSourceBuffers;\n    readonly        attribute ReadyState          readyState;\n                    attribute unrestricted double duration;\n                    attribute EventHandler        onsourceopen;\n                    attribute EventHandler        onsourceended;\n                    attribute EventHandler        onsourceclose;\n    SourceBuffer   addSourceBuffer (DOMString type);\n    undefined           removeSourceBuffer (SourceBuffer sourceBuffer);\n    undefined           endOfStream (optional EndOfStreamError error);\n    undefined           setLiveSeekableRange (double start, double end);\n    undefined           clearLiveSeekableRange ();\n    static boolean isTypeSupported (DOMString type);\n};",
    "href": "https://w3c.github.io/media-source/#dom-mediasource"
  },
  "extended": [],
  "inheritance": {
    "name": "EventTarget",
    "defined": {
      "spec": {
        "title": "DOM Standard",
        "url": "https://dom.spec.whatwg.org/"
      },
      "fragment": "[Exposed=(Window,Worker,AudioWorklet)]\ninterface EventTarget {\n  constructor();\n\n  undefined addEventListener(DOMString type, EventListener? callback, optional (AddEventListenerOptions or boolean) options = {});\n  undefined removeEventListener(DOMString type, EventListener? callback, optional (EventListenerOptions or boolean) options = {});\n  boolean dispatchEvent(Event event);\n};",
      "href": "https://dom.spec.whatwg.org/#eventtarget"
    },
    "extended": [],
    "inheritance": null,
    "includes": []
  },
  "includes": []
}